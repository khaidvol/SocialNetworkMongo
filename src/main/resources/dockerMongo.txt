Mongo Replica Set
1) create network for mongo-cluster

docker network ls
docker network create mongo-cluster
docker network ls

2) create mongo containers
docker run -p 27017:27017 --name mongo1 --net mongo-cluster mongo mongod --replSet mongo-rs
docker run -p 27018:27017 --name mongo2 --net mongo-cluster mongo mongod --replSet mongo-rs
docker run -p 27019:27017 --name mongo3 --net mongo-cluster mongo mongod --replSet mongo-rs


3)set up replication
docker exec -it mongo1 mongo
rs.initiate({"_id" : "mongo-rs","members" : [{"_id" : 0,"host" : "mongo1:27017"},{"_id" : 1,"host" : "mongo2:27017"},{"_id" : 2,"host" : "mongo3:27017"}]});

conf = rs.config();
conf.members[0].priority = 2;
rs.reconfig(conf);

4) set up cluster_admin
use admin;
db.createUser({user: "cluster_admin",pwd: "secret",roles: [ { role: "userAdminAnyDatabase", db: "admin" },  { "role" : "clusterAdmin", "db" : "admin" } ]});
db.auth("cluster_admin", "secret");


==============================================================================================================================================

1) create mongodb container
docker run --name mongotaskdb -e MONGO_INITDB_ROOT_USERNAME=mongoadmin -e MONGO_INITDB_ROOT_PASSWORD=secret -it -p 27017:27017 -d ba0c2ff8d362
docker exec -it mongodb mongo -u mongoadmin
show dbs

2) create taskdb
use taskdb

3) create indexes for full-text search
db.Task.ensureIndex({description:"text"});
db.Subtask.ensureIndex({name:"text"});